openapi: 3.0.1
info:
  title: Auth API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /auth/login:
    post:
      summary: Login de usuario
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Token JWT generado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Credenciales inválidas

  /auth/register:
    post:
      summary: Registro de nuevo usuario
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Usuario registrado exitosamente
        '400':
          description: Datos inválidos

  /users/me:
    get:
      summary: Obtener información del usuario autenticado
      tags: [User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Datos del usuario autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: No autenticado

  /users/all:
    get:
      summary: Listar todos los usuarios
      tags: [User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '403':
          description: No autorizado (requiere rol admin)
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    RegisterRequest:
      type: object
      required: [name, email, password]
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    AuthResponse:
      type: object
      properties:
        token:
          type: string

    UserResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
